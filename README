			FOggPlayer
			==========

This is a simple Ogg Vorbis player written in HaXe, a new object
oriented language aimed at scripting languages like ActionScript,
JavaScript etc. See http://haxe.org. The Ogg Vorbis decoder is the
soundapi branch of FOgg, from https://launchpad.net/fogg. It also uses
swfmill to build an embedded font resource. See http://swfmill.org.

Files
=====
ArrayTools.hx		- Part of fogg
build.bat		- Build file for windoze
build.sh		- Build file for linux
Button.hx		- Button class file
ButtonState.hx		- ButtonState class file
Changes			- Changes file
COPYING			- Gnu copyleft
FOggPlayer.hx		- Player source file
FOggPlayer.hxml		- Player build file
FOggPlayer.swf		- Flash application
Makefile		- Makefile
org/			- FOgg library files
PauseButton.hx		- PauseButton class file
PlayButton.hx		- PlayButton class file
README			- This file
README.fogg		- FOgg README
Resource.swf		- Resource library
Resource.xml		- Resource XML source
silkscreen.zip		- Silkscreen font
slkscr.ttf		- Silkscreen font file
State.hx		- State enum file
StopButton.hx		- StopButton class file
System.hx		- Part of fogg
TitleText.hx		- TitleText class file
TODO.fogg		- FOgg TODO
ValueChangeEvent.hx	- ValueChangeEvent class file
VectorTools.hx		- Part of fogg
VolumeControl.hx	- VolumeControl class file

Building
========
You can either use the build files, build.bat or build.sh, or use gnu
make with the Makefile.

Using
=====
There are three buttons, the title field, and a volume control.  The
buttons operate in the usual way, except that clicking the play button
(|>) while a file is playing will restart from the last pause
position, or the beginning if the pause button (||) or the title
hasn't been clicked. Clicking the stop button ([]) will stop the
playing, and reset the pause position.

Clicking on the title field will stop the playing and set a new pause
position.

Clicking on the volume control will set the volume in proportion to
where it is clicked.

HTML
====
Suggested html code is:

<object
   width="350"
   height="21"
   classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">
  <param
     name="movie"
     value="FOggPlayer.swf?url=http://...&title=..." />
  <embed src="FOggePlayer.swf?url=http://...&title=..."
  	 width="350"
	 height="21"
	 type="application/x-shockwave-flash">
  </embed>
</object>

NOTE: This html has been tested in current versions of Firefox,
Chrome, IE7, IE8 IE9 and Safari. That does not mean it will
necessarily work in other web browsers.

Parameters
==========
url	 - URL of ogg file
title	 - Title of ogg file
play	 - Start if true (optional)
start	 - Start if true (optional)
volume	 - Volume, 0-100 (optional)
external - External interface if true (optional)
color	 - Colour for progress bar (optional)
colour	 - Alternate spelling for color

External Interface
==================
Requires external=true and id and name parameters in the html code:

<object
   width="350"
   height="21"
   id="<id>"
   classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000">
  <param
     name="movie"
     value="FOggPlayer.swf?url=http://...&title=...&external=true" />
  <embed src="FOggPlayer.swf?url=http://...&title=...&external=true"
  	 name="<name>"
  	 width="350"
	 height="21"
	 type="application/x-shockwave-flash">
  </embed>
</object>

The javascript functions <id/name>.Start(null), <id/name>.Pause(null),
<id/name>.Cease(null), <id/name>.Volume(<value>) will start, pause,
stop and set the volume of the player respectively. The Stop function
name has been changed to Cease because of problems with Internet
Explorer. Substitute <id/name> with the value used for the id and name
parameters in the html, eg: "player". Note the functions must have a
parameter which is ignored except in the case of the volume
function. Html code to define some buttons and a text input field for
the volume:

<button type="button" onclick="player.Start(null)">Start</button>
<button type="button" onclick="player.Pause(null)">Pause</button>
<button type="button" onclick="player.Cease(null)">Stop</button>
<br />
Volume: <input type="text" value="75" size="6"
	       onchange="player.Volume(value)" /> (0-100)

In all tested browsers except IE, pressing the [Enter] key will change
the volume to the value in the text field. In IE you will need to
click elsewhere on the page. You can of course use any other method to
call the interface functions.

NOTE: To use this interface on your local file system you will need to
change your global security settings to trust the folder where you
want to keep the files. Visit http://www.macromedia.com/support/
documentation/en/flashplayer/help/settings_manager04.html to change
your settings.

Colours
=======
Colour can be one of: red green blue cyan yellow magenta, or two hex
numbers separated by a comma, like this: #ffffff,#bbbbbb.

The first value sets the colour of the top of the progress bar, the
second sets the bottom, with a gradient between.  To retain the 3D
effect the second colour needs to be darker than the first.

The progress bar colour defaults to cyan, if not defined, or there is
an error in the parameter.
